<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Assin的个人Blog</title>
  
  <subtitle>又双叒叕一个博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-26T12:17:53.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Henry RO</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>零知识证明</title>
    <link href="http://example.com/2021/10/26/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E/"/>
    <id>http://example.com/2021/10/26/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E/</id>
    <published>2021-10-26T04:20:22.000Z</published>
    <updated>2021-10-26T12:17:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="交互式零知识证明">交互式零知识证明</h2><h3 id="性质">性质</h3><ul><li>完整性（Completeness）：给遵循协议的 Prover 和 Verifier，协议能以压倒性的概率成功</li><li>完备性（Soundness）：不知道这个秘密的人，没有人能以不可忽略的可能性说服验证者（不可骗过验证者）</li><li>零知识性（Zero knowledge）：proof 不会泄露任何额外的信息</li></ul><h3 id="fiat-shamir-protocol-for-proving-quadratic-residuesuriel-feige-amos-fiat-and-adi-shamir-in-1988.">Fiat-Shamir Protocol for Proving Quadratic Residues（Uriel Feige, Amos Fiat, and Adi Shamir in 1988.）</h3><p><strong>声明：</strong>Prover 知道 <span class="math inline">\(w\)</span> 满足 <span class="math inline">\(w^2=x \mod n\)</span></p><p><strong>证明：</strong>重复下面协议 <span class="math inline">\(t\)</span> 次</p><p><strong>One-round Protocol：</strong></p><ul><li>P to V：<span class="math inline">\(y = r^2 \mod n\)</span>，<span class="math inline">\(r\)</span> 为随机数</li><li>V to P：随机选取<span class="math inline">\(b←\{0,1\}\)</span></li><li>P to V：<span class="math inline">\(z=rw^b\)</span> ,即 <span class="math inline">\(z=r,b=0;z=rw,b=1\)</span></li><li>V 验证：<span class="math inline">\(z^2=yx^b\)</span> ，即 <span class="math inline">\(z^2=y,b=0;z^2=yx,b=0\)</span></li></ul><h4 id="schnorr-id-protocol-zk-proof-of-discrete-log">Schnorr Id protocol (ZK Proof of Discrete Log)</h4><p><strong>系统参数：</strong> 素数 <span class="math inline">\(p\)</span>，<span class="math inline">\({Z_p}^*\)</span> 生成元 <span class="math inline">\(g\)</span></p><p><strong>声明：</strong>知道 <span class="math inline">\(s\)</span>，满足 <span class="math inline">\(v = g^s \mod p\)</span></p><p><strong>证明：</strong></p><ul><li>A: 选择随机数 <span class="math inline">\(r\)</span>，<span class="math inline">\(r \in [1,...,p-1]\)</span>，计算并发送 <span class="math inline">\(x = g^r \mod p\)</span></li><li>B: 发送随机挑战 <span class="math inline">\(e\)</span>，$e $ ，<span class="math inline">\(2^t&gt;\log n\)</span></li><li>A: 发送 <span class="math inline">\(y=r-se \mod (p-1)\)</span></li><li>B: 验证 <span class="math inline">\(x = g^yv^e \mod p\)</span></li></ul><h2 id="承诺">承诺</h2><h3 id="性质-1">性质</h3><ul><li>阶段<ul><li>Commit 阶段：发送方将消息锁在一个盒子中，并将这个锁住的盒子发送给接收方</li><li>Reveal 阶段：发送方向接收方证明框中的消息是特定的消息</li></ul></li><li>安全属性<ul><li>Hiding：Commit 阶段敌手不能获取承诺消息的任何信息<ul><li>Unconditional hiding：信息论上完全隐藏</li><li>Computational hiding：计算能力有限的敌手无法获取信息</li></ul></li><li>Binding：Commit 阶段结束时，敌手不能用让两个不同的值在 Reveal 阶段被成功 Reveal。<ul><li>Unconditional binding</li><li>Computational binding</li></ul></li></ul></li><li>哈希承诺</li></ul><h3 id="pedersen承诺">Pedersen承诺</h3><h4 id="初始化">初始化</h4><p>可信第三方 <strong>T</strong> 选取 <span class="math inline">\(q\)</span> 阶有限循环群 <span class="math inline">\(G\)</span>，<span class="math inline">\(G\)</span> 上存在 CDH 难题（Computational binding）。</p><p><strong>T </strong>从 <span class="math inline">\(G\)</span> 中选取生成元 <span class="math inline">\(g\in G\)</span> 和元素 <span class="math inline">\(h\in G\)</span>。</p><h4 id="计算承诺commit">计算承诺（Commit）</h4><p>实体 <strong>U</strong> 的消息 <span class="math inline">\(x\)</span>，<strong>U</strong> 从有限域 <span class="math inline">\({\mathbb{Z}}_q\)</span> 中选取随机数 <span class="math inline">\(r\in{\mathbb{Z}}_q\)</span>（致盲因子），计算 <span class="math inline">\(M=g^xh^r\in G\)</span>，<span class="math inline">\(M\)</span> 为消息 <span class="math inline">\(x\)</span> 的承诺。</p><h4 id="打开承诺reveal-open">打开承诺（Reveal / Open）</h4><p><strong>U</strong> 能够通过运行一个如下所示的知识的零知识证明协议来打开承诺同时不暴露其隐私消息<span class="math inline">\((x，r)\)</span>： <span class="math display">\[PK\{(x,\;r):\;M=g^xh^r\}\]</span></p><h4 id="交互式零知识方案">交互式零知识方案</h4><p>实体 <strong>U</strong> （证明方）让验证方 <strong>V</strong> 验证承诺 <span class="math inline">\(M\)</span>，但无需泄漏 <span class="math inline">\(m\)</span>，<span class="math inline">\(r\)</span> 。</p><figure><img src="images/image-20210622142125904.png" alt="image-20210622142125904" /><figcaption aria-hidden="true">image-20210622142125904</figcaption></figure><p>公开参数：<span class="math inline">\((G,q,g,h)\)</span></p><p>Prover 输入：承诺 <span class="math inline">\(M\)</span> 和消息 <span class="math inline">\((m,r)\)</span> 使得 <span class="math inline">\(M=g^mh^r\)</span> 成立。</p><ol type="1"><li>证明方从有限域 <span class="math inline">\({\mathbb{Z}}_q\)</span> 中选择随机参数 <span class="math inline">\(y,s\in{\mathbb{Z}}_q\)</span>。,计算 <span class="math inline">\(d=g^yh^s\)</span>，并将 <span class="math inline">\(d\)</span> 发送给验证方。</li><li>验证方从有限域<span class="math inline">\({\mathbb{Z}}_q\)</span> 中选择随机参数 <span class="math inline">\(c\in{\mathbb{Z}}_q\)</span> ，并将 <span class="math inline">\(c\)</span> 作为挑战发送给证明方。</li><li>证明方计算：<span class="math inline">\(u=cx+y \mod q\)</span>，<span class="math inline">\(v=cr+s \mod q\)</span>，并将 <span class="math inline">\(u\)</span>，<span class="math inline">\(v\)</span> 作为应答发送给验证方。</li><li>验证方验证等式 <span class="math inline">\(g^uh^v=dM^c\mod p \in G\)</span>，若等式成立，则证明成功，否则失败。</li></ol><h4 id="乘法同态">乘法同态</h4><p>Pedersen 承诺的同态性是指，如果comm1，comm2分别是使用盲因子r1，r2的对v1，v2的承诺，则comm (comm=comm1*comm2)是使用盲因子 r1+r2 对 v1+v2 的承诺。</p><h4 id="加法同态">加法同态</h4><p>椭圆曲线上的 Pedersen 承诺，形式为：<span class="math inline">\(P = r · G +v·H\)</span>，<span class="math inline">\(G\)</span> 和 <span class="math inline">\(H\)</span> 是椭圆曲线上的不同的点，<span class="math inline">\(r\)</span> 是致盲因子，<span class="math inline">\(v\)</span> 为消息。</p><p><span class="math display">\[\begin{align}comm(v_1,r_1) =&amp; r_1 · G +v_1·H \\comm(v_2,r_2) =&amp; r_2 · G +v_2·H \\comm(v_3,r_3)=&amp;comm(v_1,r_1)+comm(v_2,r_3)\\=&amp;r_1 · G +v_1·H+r_2 · G +v_2·H\\ =&amp;(r_1 + r_2)· G + (v_1 + v_2)·H\end{align}\]</span> 验证 <span class="math inline">\(v_3=v_1 + v_2\)</span> ，只需 <span class="math inline">\(r_3=r_1 + r_2\)</span> 。</p><figure><img src="images/format,png.png" alt="Pedersen_exchange" /><figcaption aria-hidden="true">Pedersen_exchange</figcaption></figure><h2 id="双线性对">双线性对</h2><p>定义三个素数 <span class="math inline">\(p\)</span> 阶群乘法循环群<span class="math inline">\((G_1,·)、(G_2,·)、(G_T,·)\)</span> ，并且定义在这三个群上的一个映射关系 <span class="math inline">\(e:G_1 \times G_2 \rightarrow G_T\)</span>，并且满足以下的三个性质：</p><ul><li>双线性性：对任意的 <span class="math inline">\(g_1\in G_1,g_2 \in G_2\)</span>，<span class="math inline">\(a,b \in {\mathbb{Z}}_p\)</span> ，均有 <span class="math inline">\(e({g_1}^a,{g_2}^b)=e(g_1,g_2)^{ab}\)</span>;</li><li>非退化性：<span class="math inline">\(\exist g_1\in G_1,g_2 \in G_2\)</span>，满足 $e({g_1},{g_2})  G_T $;</li><li>可计算性：映射 <span class="math inline">\(e\)</span> 的可计算性，存在有效的多项式时间算法计算双线性对的值</li></ul><h2 id="cl签名jan-camenisch-and-anna-lysyanskaya2004">CL签名（Jan Camenisch and Anna Lysyanskaya，2004）</h2><h3 id="scheme-a-对消息签名">Scheme A: 对消息签名</h3><h4 id="密钥生成">密钥生成</h4><p>初始化，生成参数 <span class="math inline">\((q,G,\mathbf G,g,\mathbf g,e)\)</span>，<span class="math inline">\(e:G \times G \rightarrow \mathbf G\)</span>， 取 <span class="math inline">\(x ← {\mathbb{Z}}_q\)</span>，<span class="math inline">\(y ← {\mathbb{Z}}_q\)</span>，计算<span class="math inline">\(X = g^x\)</span> ， <span class="math inline">\(Y = g^y\)</span>，私钥为 <span class="math inline">\(sk = (x,y)\)</span>，公钥为 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y)\)</span>。</p><h4 id="签名算法">签名算法</h4><p><strong>输入：</strong>消息 <span class="math inline">\(m\)</span>， 私钥 <span class="math inline">\(sk = (x,y)\)</span>，公钥 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y)\)</span></p><p>计算：</p><ul><li>选择随机数 <span class="math inline">\(a \in G\)</span></li><li><span class="math inline">\(b=a^y\)</span></li><li><span class="math inline">\(c=a^{x+mxy}\)</span></li></ul><p><strong>输出：</strong>签名 <span class="math inline">\(σ = (a,b,c)\)</span>。</p><h4 id="验签算法">验签算法</h4><p><strong>输入：</strong>公钥 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y)\)</span>， 消息 <span class="math inline">\(m\)</span>, 签名 <span class="math inline">\(σ = (a, b, c)\)</span></p><p><strong>验证：</strong> <span class="math display">\[e(a,Y)=e(g,b) \\ e(X,a)·e(X,b)^m =e(g,c)\]</span></p><h4 id="proof">proof</h4><p><span class="math display">\[\begin{align}e(a,Y)=&amp; e(a,g)^y\\ =&amp; e(g,a)^y\\ =&amp;e(g,b)\\\\e(X,a)·e(X,b)^m =&amp; e(g, a)^x · e(g, a)^{mxy}\\ =&amp; e(g, a)^{x+mxy}\\ =&amp; e(g, c)\end{align}\]</span></p><h3 id="scheme-b-对承诺签名">Scheme B: 对承诺签名</h3><h4 id="密钥生成-1">密钥生成</h4><p>初始化算法生成 <span class="math inline">\((q,G,\mathbf G,g,\mathbf g,e)\)</span>， 取 <span class="math inline">\(x ← {\mathbb{Z}}_q\)</span>，<span class="math inline">\(y ← {\mathbb{Z}}_q\)</span>，<span class="math inline">\(z ← {\mathbb{Z}}_q\)</span>，计算<span class="math inline">\(X = g^x\)</span> ， <span class="math inline">\(Y = g^y\)</span>，<span class="math inline">\(Z = g^z\)</span>，私钥为 <span class="math inline">\(sk = (x,y,z)\)</span>，公钥为 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y,Z)\)</span>。</p><h4 id="签名算法-1">签名算法</h4><p><strong>输入：</strong>消息 <span class="math inline">\((m,r)\)</span>，私钥 <span class="math inline">\(sk = (x,y,z)\)</span>，公钥 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y,Z)\)</span>。</p><p><strong>计算：</strong></p><ul><li>选取随机数 <span class="math inline">\(a ← G\)</span></li><li><span class="math inline">\(A=a^z\)</span></li><li><span class="math inline">\(b=a^y\)</span>，<span class="math inline">\(B=A^y\)</span></li><li><span class="math inline">\(c = a^{x+xym}A^{xyr}\)</span></li></ul><p><strong>输出：</strong> 签名 <span class="math inline">\(σ = (a,A,b,B,c)\)</span></p><h4 id="验签算法-1">验签算法</h4><p><strong>输入：</strong>公钥 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y,Z)\)</span>，消息 <span class="math inline">\((m,r)\)</span>，签名 <span class="math inline">\(σ = (a,A,b,B,c)\)</span>。</p><p><strong>验证：</strong></p><ul><li><p><span class="math inline">\(A\)</span> 的正确性：<span class="math inline">\(e(a,Z) = e(g,A)\)</span></p></li><li><p><span class="math inline">\(b\)</span> 和 <span class="math inline">\(B\)</span> 的正确性：<span class="math inline">\(e(a,Y) = e(g,b)\)</span>，<span class="math inline">\(e(A,Y ) = e(g,B)\)</span></p></li><li><p><span class="math inline">\(c\)</span> 的正确性：<span class="math inline">\(e(X, a) · e(X, b)^m · e(X, B)^r = e(g, c)\)</span></p></li></ul><h4 id="proof-1">Proof</h4><p><span class="math inline">\(A\)</span> 的正确性： <span class="math display">\[\begin{align}e(a,Z) =&amp; e(a,g)^z \\=&amp; e(g,a)^z \\=&amp;e(g,A)\end{align}\]</span> <span class="math inline">\(b\)</span> 和 <span class="math inline">\(B\)</span> 的正确性： <span class="math display">\[\begin{align}e(a,Y) =&amp; e(a,g)^y \\=&amp; e(g,a)^y \\=&amp; e(g,b)\\ \\e(A,Y ) =&amp; e(a,g)^{zy} \\=&amp; e(g,A)^y \\=&amp; e(g,B)\end{align}\]</span> <span class="math inline">\(c\)</span> 的正确性： <span class="math display">\[\begin{align}e(X, a) · e(X, b)^m · e(X, B)^r =&amp;e(g,a)^xe(g,a)^{xym}e(g,a)^{xyzr}\\=&amp; e(g,a)^{x+xym}e(g,a)^{xyzr}\\=&amp; e(g,a)^{x+xym}e(g,A)^{xyr}\\=&amp;e(g, c)\end{align}\]</span></p><h3 id="scheme-c-分组消息">Scheme C: 分组消息</h3><h4 id="密钥生成-2">密钥生成</h4><p>初始化算法生成 <span class="math inline">\((q,G,\mathbf G,g,\mathbf g,e)\)</span>， 取 <span class="math inline">\(x ← {\mathbb{Z}}_q\)</span>，<span class="math inline">\(y ← {\mathbb{Z}}_q\)</span>，对于<span class="math inline">\(1≤ i ≤ l\)</span>，<span class="math inline">\(Z_i ← {\mathbb{Z}}_q\)</span> 。</p><p>计算<span class="math inline">\(X = g^x\)</span> ， <span class="math inline">\(Y = g^y\)</span>，对于 <span class="math inline">\(1≤ i ≤ l\)</span>， <span class="math inline">\(Z_i = g^{z_i}\)</span> 。</p><p>私钥为 <span class="math inline">\(sk = (x,y,z_1,...,z_l)\)</span>，公钥为 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y,\{Z_i\})\)</span>。</p><h4 id="签名算法-2">签名算法</h4><p><strong>输入：</strong>消息 <span class="math inline">\((m^{(0)}, m^{(1)}, . . . , m^{(l)})\)</span>，私钥 <span class="math inline">\(sk = (x,y,z_1,...,z_l)\)</span>，公钥 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y,\{Z_i\})\)</span>。</p><p><strong>计算：</strong></p><ul><li>选取随机数 <span class="math inline">\(a ← G\)</span></li><li><span class="math inline">\(A_i=a^{z_i}\)</span>，<span class="math inline">\(1≤ i ≤ l\)</span></li><li><span class="math inline">\(b=a^y\)</span>，<span class="math inline">\(B_i={A_i}^y\)</span></li><li><span class="math inline">\(c = a^{x+xym^{(0)}}\textstyle\prod_{i=1}^l{A_i}^{xym^{(i)}}\)</span></li></ul><p><strong>输出：</strong>签名 <span class="math inline">\(σ = (a,{A_i},b,{B_i},c)\)</span></p><h4 id="验签算法-2">验签算法</h4><p><strong>输入：</strong>公钥 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y,\{Z_i\})\)</span>，消息 <span class="math inline">\((m^{(0)}, m^{(1)}, . . . , m^{(l)})\)</span>，签名 <span class="math inline">\(σ = (a,{A_i},b,{B_i},c)\)</span></p><p><strong>验证：</strong></p><ul><li><p><span class="math inline">\({A_i}\)</span> 的正确性：<span class="math inline">\(e(a,Z_i) = e(g,A_i)\)</span></p></li><li><p><span class="math inline">\(b\)</span> 和 <span class="math inline">\(B_i\)</span> 的正确性：<span class="math inline">\(e(a,Y) = e(g,b)\)</span>，<span class="math inline">\(e(A_i,Y ) = e(g,B_i)\)</span></p></li><li><p><span class="math inline">\(c\)</span> 的正确性：<span class="math inline">\(e(X, a) · e(X, b)^{m^{(0)}} ·\textstyle\prod_{i=1}^l e(X, B_i)^{m^{(i)}} = e(g, c)\)</span></p></li></ul><h2 id="匿名凭据系统anonymous-credential-system">匿名凭据系统（Anonymous Credential System）</h2><h4 id="structure">Structure</h4><p>为了构建一个匿名证书系统，有必要展示：</p><ul><li>一个承诺方案（对消息加锁）</li><li>一个签名-性质方案和有效的协议：<ul><li>(1)证明两个承诺值的相等性;</li><li>(2)在承诺值上获得签名(不向签名者透露承诺的消息内容);</li><li>(3)证明签名对承诺值的知识。</li></ul></li></ul><h4 id="在-scheme-a-上构造">在 Scheme A 上构造</h4><p>丢失 Information-Theoretic Hiding，<span class="math inline">\(M=g^m\)</span></p><h4 id="在-scheme-b-上构造">在 Scheme B 上构造</h4><p><strong>输入：</strong>承诺 <span class="math inline">\(M=g^mZ^r\)</span>，私钥 <span class="math inline">\(sk = (x,y,z)\)</span>，公钥 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y,Z)\)</span>。</p><p><strong>计算：</strong></p><ul><li>选取随机数 <span class="math inline">\(\alpha ← {\mathbb{Z}}_q\)</span>，<span class="math inline">\(a=g^\alpha\)</span></li><li><span class="math inline">\(A=a^z\)</span></li><li><span class="math inline">\(b=a^y\)</span>，<span class="math inline">\(B=A^y\)</span></li><li><span class="math inline">\(c=a^xM^{\alpha xy}\)</span>（<span class="math inline">\(c = a^{x+xym}A^{xyr}\)</span>）</li></ul><p><strong>原理：</strong> <span class="math display">\[\begin{align}c=&amp;a^xM^{axy}\\=&amp;g^{\alpha x}g^{\alpha xym}Z^{\alpha xyr}\\=&amp;g^{\alpha x}g^{\alpha xym}g^{\alpha xyzr}\\=&amp;a^{x}a^{xym}a^{xyzr}\\=&amp;a^{x+xym}A^{xyr}\end{align}\]</span></p><h4 id="在-scheme-c-上构造">在 Scheme C 上构造</h4><p><strong>共同输入：</strong>公钥 <span class="math inline">\(pk = (q,G,\mathbf G,g,\mathbf g,e,X,Y,\{Z_i\})\)</span>，承诺 <span class="math inline">\(M\)</span></p><p><strong>用户：</strong>消息 <span class="math inline">\((m^{(0)}, m^{(1)}, . . . , m^{(l)})\)</span>，计算 <span class="math inline">\(M=g^{m^{(0)}} ·\textstyle\prod_{i=1}^l {Z_i}^{m^{(i)}}\)</span></p><p><strong>签名者输入：</strong>私钥 <span class="math inline">\(sk = (x,y,z)\)</span></p><p><strong>协议：</strong></p><ol type="1"><li><p>用户通过零知识证明打开承诺： <span class="math display">\[\textstyle PK\{(\mu^{(0)},...,\mu^{(l)}):M=g^{u^{(0)}} ·\textstyle\prod_{i=1}^l {Z_i}^{u^{(i)}}\}\]</span></p></li><li><p>签名者签名：</p><ul><li>选取随机数 <span class="math inline">\(\alpha ← {\mathbb{Z}}_q\)</span>，<span class="math inline">\(a=g^\alpha\)</span></li><li><span class="math inline">\(A_i=a^{z_i}\)</span>，<span class="math inline">\(1≤ i ≤ l\)</span></li><li><span class="math inline">\(b=a^y\)</span>，<span class="math inline">\(B_i={A_i}^y\)</span>，<span class="math inline">\(1≤ i ≤ l\)</span></li><li><span class="math inline">\(c=a^xM^{\alpha xy}\)</span></li></ul></li></ol><figure><img src="images/image-20210622191745344.png" alt="image-20210622191745344" /><figcaption aria-hidden="true">image-20210622191745344</figcaption></figure><h2 id="盲签名">盲签名</h2><h4 id="性质-2">性质</h4><p>盲签名允许消息者先将消息盲化，而后让签名者对盲化的消息进行签名，最后消息拥有者对签字除去盲因子，得到签名者关于原消息的签名。盲签名就是接收者在不让签名者获取所签署消息具体内容的情况下所采取的一种特殊的数字签名技术，它除了满足一般的数字签名条件外，还必须满足下面的两条性质：</p><ul><li><p>签名者对其所签署的消息是不可见的，即签名者不知道他所签署消息的具体内容。</p></li><li><p>签名消息不可追踪，即当签名消息被公布后，签名者无法知道这是他哪次的签署的。</p></li></ul><h4 id="cl盲签名方案">CL盲签名方案</h4><p>取随机数 <span class="math inline">\(r\)</span> 作为盲因子，随机数 <span class="math inline">\(a\)</span> 变为 <span class="math inline">\(a^r\)</span></p><h5 id="scheme-a">Scheme A</h5><p>签名：<span class="math inline">\(σ = (a^r,b^r,c^r)\)</span>。</p><p>验签： <span class="math display">\[\begin{align}e(a^r,Y)=&amp;e(g,b^r) \\e(a,Y)^r=&amp;e(g,b)^r\\ \\ e(X,a^r)·e(X,b^r)^m =&amp;e(g,c^r) \\e(X,a)^r·e(X,b)^{rm} =&amp;e(g,c)^r \\{(e(X,a)·e(X,b)^m)}^r=&amp;e(g,c)^r\end{align}\]</span></p><h5 id="scheme-b">Scheme B</h5><p>签名：<span class="math inline">\(σ = (a^r,A^r,b^r,B^r,c^r)\)</span>。</p><p>验签：</p><ul><li><p><span class="math inline">\(A\)</span> 的正确性：<span class="math inline">\(e(a^r,Z) = e(g,A^r)\)</span></p></li><li><p><span class="math inline">\(b\)</span> 和 <span class="math inline">\(B\)</span> 的正确性：<span class="math inline">\(e(a^r,Y) = e(g,b^r)\)</span>，<span class="math inline">\(e(A^r,Y ) = e(g,B^r)\)</span></p></li><li><p><span class="math inline">\(c\)</span> 的正确性：<span class="math inline">\(e(X, a^r) · e(X, b^r)^m · e(X, B^r)^r = e(g, c^r)\)</span></p></li></ul><h5 id="scheme-c">Scheme C</h5><p>签名： <span class="math inline">\(σ = (a^r,{A_i}^r,b^r,{B_i}^r,c^r)\)</span></p><p>验签：</p><ul><li><span class="math inline">\({A_i}\)</span> 的正确性：<span class="math inline">\(e(a^r,Z_i) = e(g,A_i^r)\)</span></li><li><span class="math inline">\(b\)</span> 和 <span class="math inline">\(B_i\)</span> 的正确性：<span class="math inline">\(e(a^r,Y) = e(g,b^r)\)</span>，<span class="math inline">\(e(A_i^r,Y ) = e(g,B_i^r)\)</span></li><li><span class="math inline">\(c\)</span> 的正确性：<span class="math inline">\(e(X, a^r) · e(X, b^r)^{m^{(0)}} ·\textstyle\prod_{i=1}^l e(X, {B_i}^r)^{m^{(i)}} = e(g, c^r)\)</span></li></ul><h2 id="优点">优点</h2><ul><li>适用于证书方案，<span class="math inline">\(a\)</span> 签名者随机选取，很容易生成另一个签名。（just choose a random r ∈ Zq and let a ̃ = ar , ̃b = br , c ̃ = cr ）</li><li>群签名</li><li>聚合签名</li></ul>]]></content>
    
    
    <summary type="html">这是一个占位文章，可能会更新</summary>
    
    
    
    
  </entry>
  
</feed>
